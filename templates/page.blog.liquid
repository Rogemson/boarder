{% comment %}
  Check if we're viewing a single post (from URL)
{% endcomment %}

<script>
  // Check if URL has /blog/ followed by a slug
  const pathParts = window.location.pathname.split('/');
  const blogIndex = pathParts.indexOf('blog');
  
  if (blogIndex !== -1 && pathParts[blogIndex + 1]) {
    // We have a slug after /blog/
    const postSlug = pathParts[blogIndex + 1];
    
    // Redirect to proper individual post page
    // For now, we'll handle it in this same template
    window.postSlug = postSlug;
    window.showSinglePost = true;
  } else {
    window.showSinglePost = false;
  }
</script>

{% comment %}
  Custom Blog Page Template
  Displays blog posts from Sanity CMS
{% endcomment %}

<div class="blog-page">
  <!-- Hero Section -->
  <section class="blog-hero">
    <div class="container">
      <h1 class="blog-hero__title">Our Blog</h1>
      <p class="blog-hero__subtitle">Insights, tips, and stories from our team</p>
    </div>
  </section>

  <!-- Featured Post Section -->
  <section class="blog-featured">
    <div class="container">
      <h2 class="section-title">Featured Post</h2>
      <div id="featured-post" class="featured-post-placeholder">
        <p>Loading featured post...</p>
      </div>
    </div>
  </section>

  <!-- All Posts Grid -->
  <section class="blog-posts">
    <div class="container">
      <div class="blog-posts__header">
        <h2 class="section-title">Latest Posts</h2>
        
        <!-- Category Filter (Visual Only for Now) -->
        <div class="blog-filters">
          <button class="filter-btn active" data-category="all">All Posts</button>
          <button class="filter-btn" data-category="tips">Tips & Guides</button>
          <button class="filter-btn" data-category="news">News</button>
          <button class="filter-btn" data-category="stories">Stories</button>
        </div>
      </div>

      <div id="blog-posts-grid" class="blog-grid">
        <p class="loading-text">Loading posts...</p>
      </div>
    </div>
  </section>
</div>

<script>
  // Configuration
  const SANITY_PROJECT_ID = '{{ settings.sanity_project_id }}';
  const SANITY_DATASET = 'production';

  if (!SANITY_PROJECT_ID) {
    console.error('Sanity Project ID not configured');
  }

  // Fetch Featured Post
  function fetchFeaturedPost() {
    const query = `*[_type == "post" && featured == true] | order(publishedAt desc)[0] {
      title,
      "slug": slug.current,
      excerpt,
      publishedAt,
      "image": mainImage.asset->url,
      "imageAlt": mainImage.alt,
      "authorName": author->name,
      "authorImage": author->image.asset->url
    }`;

    const url = `https://${SANITY_PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${SANITY_DATASET}?query=${encodeURIComponent(query)}`;

    fetch(url)
      .then(res => res.json())
      .then(data => {
        const post = data.result;
        const container = document.getElementById('featured-post');
        
        if (!post) {
          container.innerHTML = '<p>No featured post available</p>';
          return;
        }

        const date = new Date(post.publishedAt).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });

        container.innerHTML = `
          <div class="featured-post">
            <div class="featured-post__image">
              <img src="${post.image}?w=1200&h=600&fit=crop&auto=format" 
                   alt="${post.imageAlt || post.title}" 
                   loading="eager">
            </div>
            <div class="featured-post__content">
              <div class="featured-post__meta">
                <span class="post-date">${date}</span>
                ${post.authorName ? `<span class="post-author">by ${post.authorName}</span>` : ''}
              </div>
              <h3 class="featured-post__title">${post.title}</h3>
              ${post.excerpt ? `<p class="featured-post__excerpt">${post.excerpt}</p>` : ''}
              <a href="/pages/blog?slug=${post.slug}" class="btn btn--primary">Read Full Article</a>
            </div>
          </div>
        `;
      })
      .catch(err => {
        console.error('Error fetching featured post:', err);
      });
  }

  // Fetch All Posts
  function fetchAllPosts() {
    const query = `*[_type == "post"] | order(publishedAt desc)[0..11] {
      title,
      "slug": slug.current,
      excerpt,
      publishedAt,
      "image": mainImage.asset->url,
      "imageAlt": mainImage.alt,
      "authorName": author->name,
      "categories": categories[]->title
    }`;

    const url = `https://${SANITY_PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${SANITY_DATASET}?query=${encodeURIComponent(query)}`;

    fetch(url)
      .then(res => res.json())
      .then(data => {
        const posts = data.result || [];
        const container = document.getElementById('blog-posts-grid');
        
        if (posts.length === 0) {
          container.innerHTML = '<p class="no-posts">No blog posts yet. Check back soon!</p>';
          return;
        }

        container.innerHTML = posts.map(post => {
          const date = new Date(post.publishedAt).toLocaleDateString('en-US', {
            month: 'short',
            day: 'numeric',
            year: 'numeric'
          });

          return `
            <article class="blog-card">
              ${post.image ? `
                <a href="/pages/blog?slug=${post.slug}" class="blog-card__image-link">
                  <div class="blog-card__image">
                    <img src="${post.image}?w=600&h=400&fit=crop&auto=format" 
                         alt="${post.imageAlt || post.title}" 
                         loading="lazy">
                  </div>
                </a>
              ` : ''}
              
              <div class="blog-card__content">
                ${post.categories && post.categories.length > 0 ? `
                  <span class="blog-card__category">${post.categories[0]}</span>
                ` : ''}
                
                <h3 class="blog-card__title">
                  <a href="/pages/blog?slug=${post.slug}">${post.title}</a>
                </h3>
                
                <div class="blog-card__meta">
                  <span class="post-date">${date}</span>
                  ${post.authorName ? `<span class="post-author">${post.authorName}</span>` : ''}
                </div>
                
                ${post.excerpt ? `
                  <p class="blog-card__excerpt">${post.excerpt}</p>
                ` : ''}
                
                <a href="/pages/blog?slug=${post.slug}" class="blog-card__link">
                  Read More <span aria-hidden="true">→</span>
                </a>
              </div>
            </article>
          `;
        }).join('');
      })
      .catch(err => {
        console.error('Error fetching posts:', err);
        document.getElementById('blog-posts-grid').innerHTML = 
          '<p class="error-message">Unable to load posts. Please try again later.</p>';
      });
  }

  // Initialize
  if (SANITY_PROJECT_ID) {
    fetchFeaturedPost();
    fetchAllPosts();
  }
  
  // Filter buttons (visual only for now)
  document.querySelectorAll('.filter-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
      e.target.classList.add('active');
      // TODO: Add actual filtering later
    });
  });

// Check if we're viewing a single post
const urlParams = new URLSearchParams(window.location.search);
const singlePostSlug = urlParams.get('slug');

if (singlePostSlug && SANITY_PROJECT_ID) {
  // Hide blog listing sections
  document.querySelector('.blog-featured').style.display = 'none';
  document.querySelector('.blog-posts').style.display = 'none';
  
  // Show single post
  showSinglePost(singlePostSlug);
}

function showSinglePost(slug) {
  const query = `*[_type == "post" && slug.current == "${slug}"][0] {
    title,
    excerpt,
    publishedAt,
    body,
    "image": mainImage.asset->url,
    "authorName": author->name
  }`;

  fetch(`https://${SANITY_PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${SANITY_DATASET}?query=${encodeURIComponent(query)}`)
    .then(res => res.json())
    .then(data => {
      const post = data.result;
      if (!post) {
        document.querySelector('.blog-hero').innerHTML = '<div class="container"><h1>Post not found</h1></div>';
        return;
      }

      const date = new Date(post.publishedAt).toLocaleDateString();
      let bodyText = '';
      if (post.body) {
        bodyText = post.body.map(block => {
          if (block.children) {
            return '<p>' + block.children.map(c => c.text).join('') + '</p>';
          }
          return '';
        }).join('');
      }

      document.querySelector('.blog-hero').innerHTML = `
        <div class="container">
          <a href="/pages/blog" style="color: white; margin-bottom: 16px; display: inline-block;">← Back to Blog</a>
          <h1>${post.title}</h1>
          <p>${date} ${post.authorName ? '• by ' + post.authorName : ''}</p>
        </div>
      `;

      const contentArea = document.createElement('div');
      contentArea.className = 'container';
      contentArea.style.cssText = 'max-width: 800px; padding: 40px 20px; margin: 0 auto;';
      contentArea.innerHTML = `
        ${post.image ? `<img src="${post.image}?w=1200" style="width: 100%; border-radius: 12px; margin-bottom: 24px;">` : ''}
        ${post.excerpt ? `<p style="font-size: 20px; font-style: italic; margin-bottom: 32px;">${post.excerpt}</p>` : ''}
        <div style="font-size: 18px; line-height: 1.8;">${bodyText}</div>
      `;
      
      document.querySelector('.blog-page').appendChild(contentArea);
    });
}

</script>

<style>
  /* Hero Section */
  .blog-hero {
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-active) 100%);
    padding: var(--space-32) var(--space-16);
    text-align: center;
    color: var(--color-btn-primary-text);
    margin-bottom: var(--space-32);
  }

  .blog-hero__title {
    font-size: clamp(32px, 5vw, 48px);
    font-weight: var(--font-weight-bold);
    margin: 0 0 var(--space-12) 0;
    letter-spacing: var(--letter-spacing-tight);
  }

  .blog-hero__subtitle {
    font-size: var(--font-size-xl);
    opacity: 0.95;
    margin: 0;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  /* Container */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-16);
  }

  /* Section Title */
  .section-title {
    font-size: var(--font-size-3xl);
    font-weight: var(--font-weight-semibold);
    margin-bottom: var(--space-24);
    color: var(--color-text);
  }

  /* Featured Post Section */
  .blog-featured {
    padding: var(--space-32) 0;
    background-color: var(--color-background);
  }

  .featured-post {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-32);
    align-items: center;
    background: var(--color-surface);
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-lg);
  }

  .featured-post__image {
    width: 100%;
    height: 100%;
    min-height: 400px;
    overflow: hidden;
  }

  .featured-post__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s var(--ease-standard);
  }

  .featured-post:hover .featured-post__image img {
    transform: scale(1.05);
  }

  .featured-post__content {
    padding: var(--space-32);
  }

  .featured-post__meta {
    display: flex;
    gap: var(--space-16);
    margin-bottom: var(--space-12);
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .featured-post__title {
    font-size: clamp(24px, 3vw, 36px);
    font-weight: var(--font-weight-semibold);
    margin: 0 0 var(--space-16) 0;
    line-height: var(--line-height-tight);
    color: var(--color-text);
  }

  .featured-post__excerpt {
    font-size: var(--font-size-lg);
    line-height: var(--line-height-normal);
    color: var(--color-text-secondary);
    margin-bottom: var(--space-24);
  }

  /* Blog Posts Section */
  .blog-posts {
    padding: var(--space-32) 0 var(--space-32);
  }

  .blog-posts__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-32);
    flex-wrap: wrap;
    gap: var(--space-16);
  }

  /* Category Filters */
  .blog-filters {
    display: flex;
    gap: var(--space-8);
    flex-wrap: wrap;
  }

  .filter-btn {
    padding: var(--space-8) var(--space-16);
    background: var(--color-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-full);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    color: var(--color-text);
    cursor: pointer;
    transition: all var(--duration-fast) var(--ease-standard);
  }

  .filter-btn:hover {
    background: var(--color-secondary-hover);
  }

  .filter-btn.active {
    background: var(--color-primary);
    color: var(--color-btn-primary-text);
    border-color: var(--color-primary);
  }

  /* Blog Grid */
  .blog-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--space-24);
  }

  /* Blog Card */
  .blog-card {
    background: var(--color-surface);
    border-radius: var(--radius-lg);
    border: 1px solid var(--color-card-border);
    overflow: hidden;
    transition: all var(--duration-normal) var(--ease-standard);
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .blog-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }

  .blog-card__image-link {
    display: block;
    text-decoration: none;
  }

  .blog-card__image {
    width: 100%;
    height: 240px;
    overflow: hidden;
    background: var(--color-secondary);
  }

  .blog-card__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--duration-normal) var(--ease-standard);
  }

  .blog-card:hover .blog-card__image img {
    transform: scale(1.05);
  }

  .blog-card__content {
    padding: var(--space-20);
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  .blog-card__category {
    display: inline-block;
    padding: var(--space-4) var(--space-12);
    background: var(--color-primary);
    color: var(--color-btn-primary-text);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-radius: var(--radius-sm);
    margin-bottom: var(--space-12);
    width: fit-content;
  }

  .blog-card__title {
    margin: 0 0 var(--space-12) 0;
    flex-grow: 1;
  }

  .blog-card__title a {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text);
    text-decoration: none;
    line-height: var(--line-height-tight);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .blog-card__title a:hover {
    color: var(--color-primary);
  }

  .blog-card__meta {
    display: flex;
    gap: var(--space-12);
    margin-bottom: var(--space-12);
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .post-date::before {
    content: "📅 ";
  }

  .post-author::before {
    content: "✍️ ";
  }

  .blog-card__excerpt {
    font-size: var(--font-size-base);
    line-height: var(--line-height-normal);
    color: var(--color-text-secondary);
    margin-bottom: var(--space-16);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .blog-card__link {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    color: var(--color-primary);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: var(--space-4);
    transition: gap var(--duration-fast) var(--ease-standard);
    margin-top: auto;
  }

  .blog-card__link:hover {
    gap: var(--space-8);
    color: var(--color-primary-hover);
  }

  /* Loading & Error States */
  .loading-text,
  .no-posts,
  .error-message {
    grid-column: 1 / -1;
    text-align: center;
    padding: var(--space-32);
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
  }

  .error-message {
    color: var(--color-error);
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .featured-post {
      grid-template-columns: 1fr;
    }

    .featured-post__image {
      min-height: 300px;
    }
  }

  @media (max-width: 768px) {
    .blog-hero {
      padding: var(--space-24) var(--space-16);
    }

    .blog-posts__header {
      flex-direction: column;
      align-items: flex-start;
    }

    .blog-filters {
      width: 100%;
      overflow-x: auto;
      flex-wrap: nowrap;
    }

    .blog-grid {
      grid-template-columns: 1fr;
    }

    .featured-post__content {
      padding: var(--space-20);
    }
  }
</style>
